name: Prerelease

on:
    workflow_call:
    workflow_dispatch:

jobs:
    setup:
        name: Setup environment
        runs-on: ubuntu-latest
        outputs:
            node_version: ${{ steps.version.outputs.node_version }}
            has_prerelease: ${{ steps.exists.outputs.pre_exists }}
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Get Node version
              id: version
              run:
                  echo "node_version=$(jq -r '.volta.node' package.json)" >>
                  $GITHUB_OUTPUT

            - name: Check for changeset pre.json
              id: exists
              run: |
                  if [ -f ".changeset/pre.json" ]; then
                      echo "Prerelease found"
                      echo "pre_exists=true" >> $GITHUB_OUTPUT
                  else
                      echo "No prerelease found"
                      echo "pre_exists=false" >> $GITHUB_OUTPUT
                  fi

    release:
        name: Prerelease
        needs: setup
        if: needs.setup.outputs.has_prerelease == 'true'
        runs-on: ubuntu-latest
        outputs:
            published: ${{ steps.changesets.outputs.published }}
        env:
            TZ: Australia/Brisbane
            CI: true
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Setup Node ${{ needs.setup.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ needs.setup.outputs.node_version }}
                  cache: 'yarn'
                  check-latest: true

            - name: Yarn install
              run: yarn --immutable

            - name: Create Release or Publish
              id: changesets
              uses: changesets/action@v1
              with:
                  publish: yarn release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
