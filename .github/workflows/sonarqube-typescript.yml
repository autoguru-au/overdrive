name: SonarQube Analysis (TypeScript)

on:
  workflow_call:
    inputs:
      enable_tests:
        required: false
        type: boolean
        default: true
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  sonarqube:
    name: Analyze TypeScript with SonarQube
    runs-on: ubuntu-latest
    env:
      TZ: Australia/Brisbane
      CI: true

    steps:
      # 📥 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 🔍 Detect Node.js version from package.json
      - name: Get Node.js version from package.json
        id: node_version
        run: |
          NODE_VERSION=$(jq -r '.volta.node' package.json)
          if [ -z "$NODE_VERSION" ]; then
            echo "Error: No Node.js version found in package.json under .volta.node"
            exit 1
          fi
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV

      # 🔧 Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true

      # 📦 Install dependencies
      - name: Install Dependencies
        run: yarn install --immutable --check-cache

      # 🔎 TypeScript Type Checking
      - name: TypeScript Check
        run: |
          if [ -f "tsconfig.json" ]; then
            yarn tsc --noEmit --skipLibCheck
          else
            echo "⚠️ No tsconfig.json found, skipping TypeScript check."
          fi

      # 🏗 Run Tests (if enabled)
      - name: Run Tests with Coverage
        if: inputs.enable_tests == true
        run: |
          if yarn test --no-cache --ci --coverage; then
            echo "TESTS_PASSED=true" >> $GITHUB_ENV
          else
            echo "Tests failed, skipping coverage..."
            echo "TESTS_PASSED=false" >> $GITHUB_ENV
          fi

      # 🔧 Fix lcov paths for SonarQube (only if tests ran)
      - name: Fix lcov paths
        if: env.TESTS_PASSED == 'true'
        run: |
          echo "Fixing paths in lcov.info..."
          sed -i 's#\.\./##g' coverage/lcov.info
          echo "Fixed lcov.info paths:"
          head -n 20 coverage/lcov.info || true

      # 📌 Install Sonar Scanner
      - name: Install Sonar Scanner
        run: npm install -g sonar-scanner

      # 🚀 Start SonarQube Analysis
      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          SONAR_CMD="sonar-scanner -Dsonar.projectKey='${{ github.event.repository.name }}' \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.host.url='${{ secrets.SONAR_HOST_URL }}' \
            -Dsonar.login='${{ secrets.SONAR_TOKEN }}' \
            -Dsonar.exclusions='**/node_modules/**,**/stories/**,**/*.stories.tsx'"

          if [ "$TESTS_PASSED" == "true" ]; then
            SONAR_CMD="$SONAR_CMD -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info"
          fi

          eval $SONAR_CMD
