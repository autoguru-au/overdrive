name: CI

on: push

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    env:
      TZ: Australia/Brisbane
      CI: true

    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Setup environment
        id: setups
        run: |-
          echo "::set-output name=yarn_cache::$(yarn cache dir)"
          echo "::set-output name=node_version::$(jq -r '.volta.node' package.json)"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.setups.outputs.node_version }}
          check-latest: true

      - name: Yarn cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.setups.outputs.yarn_cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-node-${{ steps.setups.outputs.node_version }}

      - run: yarn --immutable

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test --no-cache --ci --coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: coverage/

      - name: Run SonarQube analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey="${{ github.event.repository.name }}" \
            -Dsonar.organization="your-organization" \
            -Dsonar.sources=lib \
            -Dsonar.tests=lib \
            -Dsonar.inclusions="**/*.ts,**/*.tsx" \
            -Dsonar.exclusions="**/node_modules/**,**/*.stories.tsx,**/*.test.tsx" \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"
