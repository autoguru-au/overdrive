name: CI

on:
    pull_request:
        types: [opened, reopened, ready_for_review, synchronize]
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    setup:
        name: Setup Environment
        runs-on: ubuntu-latest
        outputs:
            node_version: ${{ steps.setups.outputs.node_version }}
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Setup environment
              id: setups
              run:
                  echo "node_version=$(jq -r '.volta.node' package.json)" >>
                  $GITHUB_OUTPUT

            - name: Setup Node ${{ steps.setups.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ steps.setups.outputs.node_version }}
                  cache: 'yarn'
                  check-latest: true

            - run: yarn --immutable

            - name: Cache node modules
              uses: actions/cache@v3
              id: cache-nodemodules
              with:
                  path: node_modules
                  key:
                      ${{ runner.os }}-node-${{
                      steps.setups.outputs.node_version }}-${{
                      hashFiles('**/yarn.lock') }}

    lint:
        name: Lint
        needs: setup
        runs-on: ubuntu-latest
        env:
            TZ: Australia/Brisbane
            CI: true
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Setup Node ${{ needs.setup.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ needs.setup.outputs.node_version }}

            - name: Restore node modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key:
                      ${{ runner.os }}-node-${{ needs.setup.outputs.node_version
                      }}-${{ hashFiles('**/yarn.lock') }}

            - name: Lint
              run: yarn lint

    test:
        name: Test
        needs: setup
        runs-on: ubuntu-latest
        env:
            TZ: Australia/Brisbane
            CI: true
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Setup Node ${{ needs.setup.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ needs.setup.outputs.node_version }}

            - name: Restore node modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key:
                      ${{ runner.os }}-node-${{ needs.setup.outputs.node_version
                      }}-${{ hashFiles('**/yarn.lock') }}

            - name: Test
              run: yarn test --run --coverage

            - uses: codecov/codecov-action@v5
              with:
                  token: ${{ secrets.CODECOV }}

    visual_test:
        name: Visual changes
        needs: setup
        runs-on: ubuntu-latest
        env:
            TZ: Australia/Brisbane
            CI: true
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Setup Node ${{ needs.setup.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ needs.setup.outputs.node_version }}

            - name: Restore node modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key:
                      ${{ runner.os }}-node-${{ needs.setup.outputs.node_version
                      }}-${{ hashFiles('**/yarn.lock') }}

            - name: Chromatic
              if: github.event.pull_request.draft == false
              uses: chromaui/action@latest
              with:
                  projectToken: ${{ secrets.CHROMATIC_APP_CODE }}
                  onlyChanged: true # enables TurboSnap behaviour
                  autoAcceptChanges: 'main'
                  exitZeroOnChanges: '!(main)'
                  skip: 'changeset-release/**'

            - name: Skip Chromatic
              if: github.event.pull_request.draft == true
              uses: chromaui/action@latest
              with:
                  projectToken: ${{ secrets.CHROMATIC_APP_CODE }}
                  skip: true
