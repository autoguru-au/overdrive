name: CI

on: push

jobs:
    test:
        name: Lint & Test
        runs-on: ubuntu-latest
        env:
            TZ: Australia/Brisbane
            CI: true
        steps:
            - uses: actions/checkout@main
              with:
                  fetch-depth: 0

            - name: Setup environment
              id: setups
              run: |-
                  echo "::set-output name=yarn_cache::$(yarn cache dir)"
                  echo "::set-output name=node_version::$(jq -r '.volta.node' package.json)"

            - name: Setup Node ${{ steps.setups.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ steps.setups.outputs.node_version }}
                  check-latest: true

            - name: Yarn cache
              uses: actions/cache@v1
              with:
                  path: ${{ steps.setups.outputs.yarn_cache }}
                  key:
                      ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock')
                      }}-node-${{ steps.setups.outputs.node_version }}

            - run: yarn --frozen-lockfile

            - name: Lint
              run: yarn lint

            - name: Test
              run: yarn test --no-cache --ci --coverage

            - uses: codecov/codecov-action@v1
              with:
                  token: ${{ secrets.CODECOV }}

            - name: Chromatic (main)
              if: github.ref == 'refs/heads/main'
              run:
                  yarn run chromatic test --auto-accept-changes
                  --exit-zero-on-changes
              env:
                  CHROMATIC_APP_CODE: ${{ secrets.CHROMATIC_APP_CODE }}
            - name: Chromatic (prs)
              if: github.ref != 'refs/heads/main'
              run: yarn run chromatic test --exit-zero-on-changes
              env:
                  CHROMATIC_APP_CODE: ${{ secrets.CHROMATIC_APP_CODE }}

    preview:
        name: Preview
        runs-on: ubuntu-latest
        env:
            TZ: Australia/Brisbane
            CI: true
        steps:
            - uses: actions/checkout@main

            - name: Setup environment
              id: setups
              run: |-
                  echo "::set-output name=yarn_cache::$(yarn cache dir)"
                  echo "::set-output name=node_version::$(jq -r '.volta.node' package.json)"

            - name: Setup Node ${{ steps.setups.outputs.node_version }}
              uses: actions/setup-node@main
              with:
                  node-version: ${{ steps.setups.outputs.node_version }}

            - name: Yarn cache
              uses: actions/cache@main
              with:
                  path: ${{ steps.setups.outputs.yarn_cache }}
                  key:
                      ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock')
                      }}-node-${{ steps.setups.outputs.node_version }}

            - run: yarn --frozen-lockfile

            - name: Build Storybook
              run: yarn storybook:build

            - name: Build Playroom
              run: yarn playroom:build

            - name: Stage ready for deploy
              run: |-
                  mkdir -p site-dist/playroom;
                  mv .playroom/dist/* site-dist/playroom;
                  mv storybook-static/* site-dist/;

            - name: Deploy Site (main)
              if: github.ref == 'refs/heads/main'
              run: npx surge -p site-dist/ -d overdrive.autoguru.io
              env:
                  SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
                  SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

            - name: Deploy Site (pr)
              if: github.ref != 'refs/heads/main'
              run: >-
                  npx surge -p site-dist/ -d overdrive--${GITHUB_SHA}.surge.sh
                  && node ./scripts/githubPostPreviewLink.js
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
                  SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
