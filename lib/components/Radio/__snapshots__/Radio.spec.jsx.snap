// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RadioButton /> when nested in a RadioGroup should match the snapshot for a checked radio 1`] = `
<div
  class="lightGrid radioGroup column"
  style="flex-wrap:nowrap;flex-direction:column;justify-content:flex-start;align-content:stretch;align-items:stretch;padding:var(--global--space--0);width:100%"
>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="1"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 1
    </label>
  </div>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="2"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 2
    </label>
  </div>
</div>
`;

exports[`<RadioButton /> when nested in a RadioGroup should match the snapshot for a focused radio 1`] = `
<Component
  label="radio label 1"
  value="1"
>
  <GridItem
    Component={[Function]}
    checked={false}
    className="radio"
    disabled={false}
    grow={1}
    handleClick={[Function]}
    inputName="radio"
    inputType="radio"
    label="radio label 1"
    shrink={0}
    value="1"
  >
    <CheckableBase
      checked={false}
      className="gridItem radio"
      disabled={false}
      handleClick={[Function]}
      inputName="radio"
      inputType="radio"
      label="radio label 1"
      style={
        Object {
          "display": "flex",
          "flexBasis": "auto",
          "flexGrow": 1,
          "flexShrink": 0,
          "height": undefined,
          "margin": "calc(0.5 * var(--global--space--4)) 0",
          "minHeight": "auto",
          "width": undefined,
        }
      }
      value="1"
    >
      <Grid
        className="root gridItem radio"
        direction="row"
        gutter="space-0"
        height="inherit"
        layoutAlign="start"
        layoutPerpendicularAlign="center"
        padding="space-3"
        width="inherit"
        wrap="nowrap"
      >
        <LightGrid
          className="root gridItem radio"
          direction="row"
          gutter="space-0"
          height="inherit"
          layoutAlign="start"
          layoutPerpendicularAlign="center"
          padding="space-3"
          width="inherit"
          wrap="nowrap"
        >
          <div
            className="lightGrid root gridItem radio row"
            style={
              Object {
                "alignContent": "center",
                "alignItems": "center",
                "flexDirection": "row",
                "flexWrap": "nowrap",
                "height": "inherit",
                "justifyContent": "flex-start",
                "padding": "var(--global--space--3)",
                "width": "inherit",
              }
            }
          >
            <input
              checked={false}
              className="nativeInput"
              disabled={false}
              name="radio"
              onChange={[Function]}
              onClick={[Function]}
              type="radio"
              value="1"
            />
            <div
              className="checkable"
            >
              <div
                className="outerCircle"
              />
              <div
                className="innerCircle"
              />
            </div>
            <div
              className="focusRect"
            />
            <GridItem
              Component="label"
              className="label"
              grow={1}
              shrink={1}
            >
              <label
                className="gridItem label"
                style={
                  Object {
                    "display": "flex",
                    "flexBasis": "auto",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "height": undefined,
                    "margin": "0 calc(0.5 * var(--global--space--0))",
                    "minWidth": "auto",
                    "width": undefined,
                  }
                }
              >
                radio label 1
              </label>
            </GridItem>
          </div>
        </LightGrid>
      </Grid>
    </CheckableBase>
  </GridItem>
</Component>
`;

exports[`<RadioButton /> when nested in a RadioGroup should match the snapshot for a group of radios 1`] = `
<div
  class="lightGrid radioGroup column"
  style="flex-wrap:nowrap;flex-direction:column;justify-content:flex-start;align-content:stretch;align-items:stretch;padding:var(--global--space--0);width:100%"
>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="1"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 1
    </label>
  </div>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="2"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 2
    </label>
  </div>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="3"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 3
    </label>
  </div>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="4"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 4
    </label>
  </div>
</div>
`;

exports[`<RadioButton /> when nested in a RadioGroup should match the snapshot for a single radio 1`] = `
<div
  class="lightGrid radioGroup column"
  style="flex-wrap:nowrap;flex-direction:column;justify-content:flex-start;align-content:stretch;align-items:stretch;padding:var(--global--space--0);width:100%"
>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
      value="1"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    >
      radio label 1
    </label>
  </div>
</div>
`;

exports[`<RadioButton /> when nested in a RadioGroup should match the snapshot for a single radio with no value or label 1`] = `
<div
  class="lightGrid radioGroup column"
  style="flex-wrap:nowrap;flex-direction:column;justify-content:flex-start;align-content:stretch;align-items:stretch;padding:var(--global--space--0);width:100%"
>
  <div
    class="lightGrid root gridItem radio row"
    style="flex-wrap:nowrap;flex-direction:row;justify-content:flex-start;align-content:center;align-items:center;padding:var(--global--space--3);width:inherit;height:inherit"
  >
    <input
      class="nativeInput"
      name="radio"
      type="radio"
    />
    <div
      class="checkable"
    >
      <div
        class="outerCircle"
      />
      <div
        class="innerCircle"
      />
    </div>
    <div
      class="focusRect"
    />
    <label
      class="gridItem label"
      style="flex-grow:1;flex-shrink:1;flex-basis:auto;display:flex;min-width:auto;margin:0 calc(0.5 * var(--global--space--0))"
    />
  </div>
</div>
`;
