import{d as m}from"./index-CYx1ALmS.js";import{R as d}from"./index-Cr_cdoBq.js";import{d as g}from"./dataAttrs-BPvLuXwN.js";import{B as r}from"./Box-C6EWUaDo.js";import{u as s}from"./useTextStyles-0HJxnMk7.js";var v="dqp1cw0",f={small:"dqp1cw1",standard:"dqp1cw2",large:"dqp1cw3"},l={default:{neutral:"dqp1cw4",green:"dqp1cw5",blue:"dqp1cw6",yellow:"dqp1cw7",red:"dqp1cw8"},inverted:{neutral:{background:"dqp1cw9",text:"dqp1cwa"},green:{background:"dqp1cwb",text:"dqp1cwc"},blue:{background:"dqp1cwd",text:"dqp1cwe"},yellow:{background:"dqp1cwf",text:"dqp1cwg"},red:{background:"dqp1cwh",text:"dqp1cwi"}}};const w={small:"1",standard:"1",large:"4"},q={small:"1",standard:"1",large:"4"},u=({label:e,colour:a="neutral",look:o="standard",size:t="standard",className:i="",testId:c})=>{const p=s({noWrap:!0,fontWeight:"semiBold",colour:"unset"}),n=o==="inverted";return m.invariant(["string","number"].includes(typeof e),"Badge `label` can only contain string's or number's"),d.createElement(r,{className:i,display:"flex",...g({"test-id":c})},d.createElement(r,{className:[f[t],n?l.inverted[a].background:l.default[a]],overflow:"hidden",display:"block",paddingX:w[t],paddingY:q[t],borderRadius:"1"},d.createElement(r,{as:"span",display:"block",overflow:"hidden",className:[p,v,n?l.inverted[a].text:s({colour:"white"})]},e)))};try{u.displayName="Badge",u.__docgenInfo={description:"",displayName:"Badge",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},colour:{defaultValue:{value:"neutral"},description:"",name:"colour",required:!1,type:{name:"enum",value:[{value:'"blue"'},{value:'"green"'},{value:'"red"'},{value:'"yellow"'},{value:'"neutral"'}]}},className:{defaultValue:{value:""},description:"",name:"className",required:!1,type:{name:"string"}},look:{defaultValue:{value:"standard"},description:"",name:"look",required:!1,type:{name:"enum",value:[{value:'"standard"'},{value:'"inverted"'}]}},size:{defaultValue:{value:"standard"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"large"'},{value:'"small"'},{value:'"standard"'}]}},testId:{defaultValue:null,description:"The test ID will be rendered as a data attribute on the element for e2e testing purposes",name:"testId",required:!1,type:{name:"string"}}}}}catch{}export{u as B};
