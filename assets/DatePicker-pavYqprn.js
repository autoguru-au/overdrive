import{r as D,e,c as C,E as z,s as T}from"./iframe-CmQjDVxl.js";import{s as r,u as L,f as d}from"./useCalendarPopover-BbfJUyF0.js";import{I as R}from"./Icon-BLKl0fsw.js";import{P as F}from"./ProgressSpinner-BRsiJzIH.js";import{T as A}from"./Text-9F2rqdui.js";import{V as U}from"./VisuallyHidden-BzML0RzK.js";import{P as B}from"./PopoverTrigger-kFMJNpSt.js";import{C as H}from"./Calendar-CbQ2FHdr.js";import{I as W}from"./CurrencyUsdIcon-CDgSxMgu.js";var G="_1j3uugj0",J="_1j3uugj1",K="_1j3uugj2",P={default:"_1j3uugj3",withLabel:"_1j3uugj4"},I={cursor:"_1j3uugj5",native:"_1j3uugj6"};const Q={openCalendar:"open calendar"},X={small:"2",medium:"3",large:"5"},u=D.forwardRef(({calendarOptions:a,className:m,defaultValue:c,disabled:t=!1,icon:k=W,isLoading:q=!1,lang:w,max:n,min:l,onChange:p,placement:E="bottom left",size:i="medium",testId:Y,useNativePicker:_=!1,value:f,valueLabel:o,...v},g)=>{const j=f?r(f):void 0,N=c?r(c):void 0,{selectedDate:h,handleCalendarChange:b,setPopoverState:M}=L({value:j,defaultValue:N,onChange:s=>{p?.(d(s))}}),S=s=>{const x=s.currentTarget.value;p?.(x)},y=q?e.createElement(F,{size:i}):e.createElement(R,{icon:k,size:i}),V=o?e.createElement(A,{size:X[i]},o):null,O=D.useMemo(()=>({calendarOptions:{...l&&{minValue:r(l)},...n&&{maxValue:r(n)},...a?.calendarOptions},...a,onChange:b}),[a,b,l,n]);return _?e.createElement("div",{className:C(m,G,t&&I.native)},e.createElement("input",{...v,ref:g,className:z({className:[J,{[I.cursor]:t}]}),type:"date",disabled:t,min:l,max:n,value:d(h),onChange:S}),e.createElement("div",{className:K},e.createElement("div",{className:C(P.default,{[P.withLabel]:!!o})},y,V))):e.createElement("div",{className:m},e.createElement(B,{content:e.createElement(H,{...O}),placement:E,testId:Y,isDisabled:t,onStateReady:M},e.createElement("div",{className:T({display:"flex",alignItems:"center",gap:"1"})},y,V),e.createElement(U,null,w?.openCalendar??Q.openCalendar)),e.createElement("input",{...v,ref:g,value:d(h),type:"hidden"}))});u.displayName="DatePicker";try{u.displayName="DatePicker",u.__docgenInfo={description:"The DatePicker has been updated to render the Calendar component with a Popover while\nmaintaining backwards compatability.\n\n## Props\n- Visual size controlled by `size` (small | medium | large)\n- Icon can be customized via the `icon` prop\n\n## Event handling\n- `onChange` is always invoked with the raw ISO date string (or empty string when cleared)\n\n## Compatibility mode\n- Setting `useNativePicker={true}` preserves the original browser-specific experience.\n\n## Internationalization\n- Override text values via `lang={{ openCalendar: 'open calendar' }}`\n- Calendar options including `lang` can be passed via `calendarOptions` prop\n- Date formatting helper available in `...utils/dateFormat.ts` or use `@internationalized/date` utils\n- Advanced i18n and localization handled by [React Aria I18Provider](https://react-spectrum.adobe.com/react-aria/I18nProvider.html)\n- Read more about [International calendars](https://react-spectrum.adobe.com/react-aria/useDatePicker.html#international-calendars)",displayName:"DatePicker",props:{calendarOptions:{defaultValue:null,description:"Options to customise the calendar: `allowPastDate`, `lang`, etc.",name:"calendarOptions",required:!1,type:{name:'Omit<CalendarProps, "onChange">'}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},defaultValue:{defaultValue:null,description:"Default selected date as an ISO string YYYY-MM-DD (uncontrolled)",name:"defaultValue",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Whether the picker is disabled and non-interactive",name:"disabled",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Icon to render inside the picker (defaults to calendar icon)",name:"icon",required:!1,type:{name:"IconType"}},id:{defaultValue:null,description:"Form field id",name:"id",required:!1,type:{name:"string"}},isLoading:{defaultValue:{value:"false"},description:"Show a loading state spinner instead of the icon",name:"isLoading",required:!1,type:{name:"boolean"}},max:{defaultValue:null,description:"Maximum selectable date YYYY-MM-DD",name:"max",required:!1,type:{name:"string"}},min:{defaultValue:null,description:"Minimum selectable date YYYY-MM-DD",name:"min",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"Input field name recommended for form usage",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(date: string) => void"}},placement:{defaultValue:{value:"bottom left"},description:"Calendar popover placement relative to the trigger ('bottom left', 'top', etc.)",name:"placement",required:!1,type:{name:"enum",value:[{value:'"bottom"'},{value:'"left"'},{value:'"right"'},{value:'"top"'},{value:'"end"'},{value:'"start"'},{value:'"bottom left"'},{value:'"bottom right"'},{value:'"bottom start"'},{value:'"bottom end"'},{value:'"top left"'},{value:'"top right"'},{value:'"top start"'},{value:'"top end"'},{value:'"left top"'},{value:'"left bottom"'},{value:'"start top"'},{value:'"start bottom"'},{value:'"right top"'},{value:'"right bottom"'},{value:'"end top"'},{value:'"end bottom"'}]}},size:{defaultValue:{value:"medium"},description:"Visual size of the picker control (small, medium, large)",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},value:{defaultValue:null,description:"The selected date as an ISO string (YYYY-MM-DD). Use `undefined` for an empty value\n(controlled)",name:"value",required:!1,type:{name:"string"}},valueLabel:{defaultValue:null,description:"Fallback label to display when no date value is selected.",name:"valueLabel",required:!1,type:{name:"string"}},useNativePicker:{defaultValue:{value:"false"},description:"Use native browser date picker instead of Calendar popover",name:"useNativePicker",required:!1,type:{name:"boolean"}},lang:{defaultValue:null,description:"Language content override for DatePicker",name:"lang",required:!1,type:{name:'Partial<Record<"openCalendar", string>>'}},testId:{defaultValue:null,description:"The test ID will be rendered as a data attribute `data-testid` on the element for use with test assertions",name:"testId",required:!1,type:{name:"string"}}}}}catch{}export{u as D};
