import{u as v,C as b,e as x}from"./iframe-B-UydsVC.js";import{b as V}from"./flex-BILhuLeF.js";var _="_1l3ycav0";const e=({as:n,children:t,expand:a,align:i,center:r,end:s,fullWidth:l,gap:o="2",height:p,noWrap:d,justify:u,reverse:c,spaceBetween:m,start:g,...f})=>{const{Component:y,componentProps:h}=v({...f,as:n,odComponent:"flex-inline",className:_,...V({align:i,center:r,end:s,fullWidth:l,gap:o,height:p,noWrap:d,justify:u,reverse:c,spaceBetween:m,start:g}),...b({expand:a})});return x.createElement(y,{...h},t)};e.displayName="FlexInline";try{e.displayName="FlexInline",e.__docgenInfo={description:"A horizontal layout component that arranges items with consistent spacing\nwithout wrapping content within additional components.\n\n- Supports responsive spacing and alignment\n- Can be reversed, centered, or justified\n- Wrapping behavior can be controlled\n\nThe `inline` function is available to apply the same flex layout option\nto any html element. Example use\n`<div className={inline({ gap: '3', end: true })} />`\n\n**Note**: Responsive props (`align`, `justify`) take precedence over\nshortcut props (`center`, `start`, etc.).",displayName:"FlexInline",props:{as:{defaultValue:null,description:"Name of HTML tag to render the component as",name:"as",required:!1,type:{name:"ElementType"}},align:{defaultValue:{value:"start"},description:"Main-axis horizontal alignment of items (_responsive_)",name:"align",required:!1,type:{name:`ConditionalStyleWithResponsiveArray<Values<{ spaceAround: string; 'space-around': string; spaceBetween: string; 'space-between': string; 'space-evenly': string; center: string; centre: string; end: string; flexEnd: string; flexStart: string; start: string; stretch: string; }, { ...; }>, ("mobile" | ... 2 more ... | ...`}},center:{defaultValue:null,description:"Shortcut center horizontal alignment",name:"center",required:!1,type:{name:"boolean"}},end:{defaultValue:null,description:"Shortcut end/bottom alignment",name:"end",required:!1,type:{name:"boolean"}},expand:{defaultValue:null,description:"Child elements should fill available space",name:"expand",required:!1,type:{name:"boolean"}},fullWidth:{defaultValue:null,description:"Adds 100% width",name:"fullWidth",required:!1,type:{name:"boolean"}},gap:{defaultValue:{value:"2"},description:"Item horizontal spacing (_responsive_)",name:"gap",required:!1,type:{name:'ConditionalStyleWithResponsiveArray<Values<Record<"none" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9", { vars: { [x: string]: `var(--${string})`; }; gap: `var(--${string})`; }>, { defaultClass: string; conditions: { mobile: string; tablet: string; desktop: string; largeDesktop: string; }; }>, ("mobile" | .....'}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"ConditionalStyleWithResponsiveArray<Values<{ 'fit-content': \"fit-content\"; 'max-content': \"max-content\"; 'min-content': \"min-content\"; full: \"100%\"; auto: \"auto\"; '1': `var(--${string})`; '2': `var(--${string})`; '3': `var(--${string})`; '4': `var(--${string})`; '5': `var(--${string})`; '6': `var(--${string})`; '7':..."}},noWrap:{defaultValue:null,description:"Prevent items from wrapping to the next row",name:"noWrap",required:!1,type:{name:"boolean"}},justify:{defaultValue:null,description:"Cross-axis vertical alignment of items (_responsive_)",name:"justify",required:!1,type:{name:'ConditionalStyleWithResponsiveArray<Values<{ baseline: "baseline"; center: string; centre: string; end: string; flexEnd: string; flexStart: string; start: string; stretch: string; }, { defaultClass: string; conditions: { mobile: string; tablet: string; desktop: string; largeDesktop: string; }; }>, ("mobile" | ... 2 ...'}},reverse:{defaultValue:null,description:"Reverse item order",name:"reverse",required:!1,type:{name:"boolean"}},spaceBetween:{defaultValue:null,description:"Shortcut `space-between` justification",name:"spaceBetween",required:!1,type:{name:"boolean"}},start:{defaultValue:null,description:"Shortcut start/top alignment",name:"start",required:!1,type:{name:"boolean"}}}}}catch{}export{e as F};
