import{r as p,e as m,B as ge,C as me,S as ee,t as ve}from"./iframe-C9jllvPJ.js";import{$ as ae}from"./context-CHBhQBBQ.js";import{$ as we}from"./NumberFormatter-DNR9MAW-.js";import{d as ne,c as oe,B as ye,C as Te,w as xe,y as Ve,a as Q,D as $e,E as ke,$ as De}from"./useFocusable-BQN1eFB0.js";import{$ as O,a as re}from"./number-DL2p9zOw.js";import{$ as fe}from"./useLabel-BuF5C5Ki.js";import{$ as Pe}from"./useFormReset-BlBIGvRe.js";import{I as se}from"./Icon-BV8fzRUr.js";import{I as Ee}from"./MinusIcon-qk3OTp8O.js";import{I as Se}from"./PlusIcon-mkYso9eY.js";import{$ as Ie}from"./useFocusRing-DMJw45HI.js";import{V as je}from"./VisuallyHidden-DYpFOKMy.js";import"./preload-helper-PPVm8Dsz.js";import"./useLabels-DorNaQrF.js";import"./resolveResponsiveProps-DGBAxJXa.js";import"./useFocusWithin-DINSk8S8.js";function be(n){let{onMoveStart:t,onMove:e,onMoveEnd:u}=n,d=p.useRef({didMove:!1,lastPosition:null,id:null}),{addGlobalListener:o,removeGlobalListener:g}=ne(),y=oe((i,v,f,r)=>{f===0&&r===0||(d.current.didMove||(d.current.didMove=!0,t?.({type:"movestart",pointerType:v,shiftKey:i.shiftKey,metaKey:i.metaKey,ctrlKey:i.ctrlKey,altKey:i.altKey})),e?.({type:"move",pointerType:v,deltaX:f,deltaY:r,shiftKey:i.shiftKey,metaKey:i.metaKey,ctrlKey:i.ctrlKey,altKey:i.altKey}))}),h=oe((i,v)=>{ye(),d.current.didMove&&u?.({type:"moveend",pointerType:v,shiftKey:i.shiftKey,metaKey:i.metaKey,ctrlKey:i.ctrlKey,altKey:i.altKey})});return{moveProps:p.useMemo(()=>{let i={},v=()=>{Te(),d.current.didMove=!1};{let r=c=>{if(c.pointerId===d.current.id){var w,l;let M=c.pointerType||"mouse";var T,D;y(c,M,c.pageX-((T=(w=d.current.lastPosition)===null||w===void 0?void 0:w.pageX)!==null&&T!==void 0?T:0),c.pageY-((D=(l=d.current.lastPosition)===null||l===void 0?void 0:l.pageY)!==null&&D!==void 0?D:0)),d.current.lastPosition={pageX:c.pageX,pageY:c.pageY}}},V=c=>{if(c.pointerId===d.current.id){let w=c.pointerType||"mouse";h(c,w),d.current.id=null,g(window,"pointermove",r,!1),g(window,"pointerup",V,!1),g(window,"pointercancel",V,!1)}};i.onPointerDown=c=>{c.button===0&&d.current.id==null&&(v(),c.stopPropagation(),c.preventDefault(),d.current.lastPosition={pageX:c.pageX,pageY:c.pageY},d.current.id=c.pointerId,o(window,"pointermove",r,!1),o(window,"pointerup",V,!1),o(window,"pointercancel",V,!1))}}let f=(r,V,c)=>{v(),y(r,"keyboard",V,c),h(r,"keyboard")};return i.onKeyDown=r=>{switch(r.key){case"Left":case"ArrowLeft":r.preventDefault(),r.stopPropagation(),f(r,-1,0);break;case"Right":case"ArrowRight":r.preventDefault(),r.stopPropagation(),f(r,1,0);break;case"Up":case"ArrowUp":r.preventDefault(),r.stopPropagation(),f(r,0,-1);break;case"Down":case"ArrowDown":r.preventDefault(),r.stopPropagation(),f(r,0,1);break}},i},[d,o,g,y,h])}}function Me(n={}){let{locale:t}=ae();return p.useMemo(()=>new we(t,n),[t,n])}const Ke=0,Be=100,Ae=1;function Re(n){const{isDisabled:t=!1,minValue:e=Ke,maxValue:u=Be,numberFormatter:d,step:o=Ae,orientation:g="horizontal"}=n;let y=p.useMemo(()=>{let a=(u-e)/10;return a=O(a,0,a+o,o),Math.max(a,o)},[o,u,e]),h=p.useCallback(a=>a?.map((b,$)=>{let U=$===0?e:a[$-1],_=$===a.length-1?u:a[$+1];return O(b,U,_,o)}),[e,u,o]),S=p.useMemo(()=>h(ce(n.value)),[n.value,h]),i=p.useMemo(()=>{var a;return h((a=ce(n.defaultValue))!==null&&a!==void 0?a:[e])},[n.defaultValue,e,h]),v=de(n.value,n.defaultValue,n.onChange),f=de(n.value,n.defaultValue,n.onChangeEnd);const[r,V]=xe(S,i,v);let[c]=p.useState(r);const[w,l]=p.useState(new Array(r.length).fill(!1)),T=p.useRef(new Array(r.length).fill(!0)),[D,M]=p.useState(void 0),P=p.useRef(r),x=p.useRef(w);let B=a=>{P.current=a,V(a)},A=a=>{x.current=a,l(a)};function N(a){return(a-e)/(u-e)}function q(a){return a===0?e:r[a-1]}function G(a){return a===r.length-1?u:r[a+1]}function z(a){return T.current[a]}function R(a,b){T.current[a]=b}function k(a,b){if(t||!z(a))return;const $=q(a),U=G(a);b=O(b,$,U,o);let _=ue(P.current,a,b);B(_)}function E(a,b){if(t||!z(a))return;b&&(P.current=r);const $=x.current[a];x.current=ue(x.current,a,b),A(x.current),f&&$&&!x.current.some(Boolean)&&f(P.current)}function I(a){return d.format(a)}function s(a,b){k(a,K(b))}function j(a){return Math.round((a-e)/o)*o+e}function K(a){const b=a*(u-e)+e;return re(j(b),e,u)}function C(a,b=1){let $=Math.max(b,o);k(a,O(r[a]+$,e,u,o))}function H(a,b=1){let $=Math.max(b,o);k(a,O(r[a]-$,e,u,o))}return{values:r,defaultValues:n.defaultValue!==void 0?i:c,getThumbValue:a=>r[a],setThumbValue:k,setThumbPercent:s,isThumbDragging:a=>w[a],setThumbDragging:E,focusedThumb:D,setFocusedThumb:M,getThumbPercent:a=>N(r[a]),getValuePercent:N,getThumbValueLabel:a=>I(r[a]),getFormattedValue:I,getThumbMinValue:q,getThumbMaxValue:G,getPercentValue:K,isThumbEditable:z,setThumbEditable:R,incrementThumb:C,decrementThumb:H,step:o,pageSize:y,orientation:g,isDisabled:t}}function ue(n,t,e){return n[t]===e?n:[...n.slice(0,t),e,...n.slice(t+1)]}function ce(n){if(n!=null)return Array.isArray(n)?n:[n]}function de(n,t,e){return u=>{e?.(typeof n=="number"||typeof t=="number"?u[0]:u)}}const le=new WeakMap;function te(n,t){let e=le.get(n);if(!e)throw new Error("Unknown slider state");return`${e.id}-${t}`}function Fe(n,t,e){let{labelProps:u,fieldProps:d}=fe(n),o=n.orientation==="vertical";var g;le.set(t,{id:(g=u.id)!==null&&g!==void 0?g:d.id,"aria-describedby":n["aria-describedby"],"aria-details":n["aria-details"]});let{direction:y}=ae(),{addGlobalListener:h,removeGlobalListener:S}=ne();const i=p.useRef(null),v=y==="rtl",f=p.useRef(null),{moveProps:r}=be({onMoveStart(){f.current=null},onMove({deltaX:l,deltaY:T}){if(!e.current)return;let{height:D,width:M}=e.current.getBoundingClientRect(),P=o?D:M;f.current==null&&i.current!=null&&(f.current=t.getThumbPercent(i.current)*P);let x=o?T:l;if((o||v)&&(x=-x),f.current+=x,i.current!=null&&e.current){const B=re(f.current/P,0,1);t.setThumbPercent(i.current,B)}},onMoveEnd(){i.current!=null&&(t.setThumbDragging(i.current,!1),i.current=null)}});let V=p.useRef(void 0),c=(l,T,D,M)=>{if(e.current&&!n.isDisabled&&t.values.every((P,x)=>!t.isThumbDragging(x))){let{height:P,width:x,top:B,left:A}=e.current.getBoundingClientRect(),N=o?P:x,R=((o?M:D)-(o?B:A))/N;(y==="rtl"||o)&&(R=1-R);let k=t.getPercentValue(R),E,I=t.values.findIndex(s=>k-s<0);if(I===0)E=I;else if(I===-1)E=t.values.length-1;else{let s=t.values[I-1],j=t.values[I];Math.abs(s-k)<Math.abs(j-k)?E=I-1:E=I}E>=0&&t.isThumbEditable(E)?(l.preventDefault(),i.current=E,t.setFocusedThumb(E),V.current=T,t.setThumbDragging(i.current,!0),t.setThumbValue(E,k),h(window,"mouseup",w,!1),h(window,"touchend",w,!1),h(window,"pointerup",w,!1)):i.current=null}},w=l=>{var T,D;((D=l.pointerId)!==null&&D!==void 0?D:(T=l.changedTouches)===null||T===void 0?void 0:T[0].identifier)===V.current&&(i.current!=null&&(t.setThumbDragging(i.current,!1),i.current=null),S(window,"mouseup",w,!1),S(window,"touchend",w,!1),S(window,"pointerup",w,!1))};return"htmlFor"in u&&u.htmlFor&&(delete u.htmlFor,u.onClick=()=>{var l;(l=document.getElementById(te(t,0)))===null||l===void 0||l.focus(),Ve("keyboard")}),{labelProps:u,groupProps:{role:"group",...d},trackProps:Q({onMouseDown(l){l.button!==0||l.altKey||l.ctrlKey||l.metaKey||c(l,void 0,l.clientX,l.clientY)},onPointerDown(l){l.pointerType==="mouse"&&(l.button!==0||l.altKey||l.ctrlKey||l.metaKey)||c(l,l.pointerId,l.clientX,l.clientY)},onTouchStart(l){c(l,l.changedTouches[0].identifier,l.changedTouches[0].clientX,l.changedTouches[0].clientY)},style:{position:"relative",touchAction:"none"}},r),outputProps:{htmlFor:t.values.map((l,T)=>te(t,T)).join(" "),"aria-live":"off"}}}function Le(n,t){let{index:e=0,isRequired:u,validationState:d,isInvalid:o,trackRef:g,inputRef:y,orientation:h=t.orientation,name:S,form:i}=n,v=n.isDisabled||t.isDisabled,f=h==="vertical",{direction:r}=ae(),{addGlobalListener:V,removeGlobalListener:c}=ne(),w=le.get(t);var l;const{labelProps:T,fieldProps:D}=fe({...n,id:te(t,e),"aria-labelledby":`${w.id} ${(l=n["aria-labelledby"])!==null&&l!==void 0?l:""}`.trim()}),M=t.values[e],P=p.useCallback(()=>{y.current&&$e(y.current)},[y]),x=t.focusedThumb===e;p.useEffect(()=>{x&&P()},[x,P]);let B=r==="rtl",A=p.useRef(null),{keyboardProps:N}=ke({onKeyDown(s){let{getThumbMaxValue:j,getThumbMinValue:K,decrementThumb:C,incrementThumb:H,setThumbValue:a,setThumbDragging:b,pageSize:$}=t;if(!/^(PageUp|PageDown|Home|End)$/.test(s.key)){s.continuePropagation();return}switch(s.preventDefault(),b(e,!0),s.key){case"PageUp":H(e,$);break;case"PageDown":C(e,$);break;case"Home":a(e,K(e));break;case"End":a(e,j(e));break}b(e,!1)}}),{moveProps:q}=be({onMoveStart(){A.current=null,t.setThumbDragging(e,!0)},onMove({deltaX:s,deltaY:j,pointerType:K,shiftKey:C}){const{getThumbPercent:H,setThumbPercent:a,decrementThumb:b,incrementThumb:$,step:U,pageSize:_}=t;if(!g.current)return;let{width:pe,height:he}=g.current.getBoundingClientRect(),ie=f?he:pe;if(A.current==null&&(A.current=H(e)*ie),K==="keyboard")s>0&&B||s<0&&!B||j>0?b(e,C?_:U):$(e,C?_:U);else{let Z=f?j:s;(f||B)&&(Z=-Z),A.current+=Z,a(e,re(A.current/ie,0,1))}},onMoveEnd(){t.setThumbDragging(e,!1)}});t.setThumbEditable(e,!v);const{focusableProps:G}=De(Q(n,{onFocus:()=>t.setFocusedThumb(e),onBlur:()=>t.setFocusedThumb(void 0)}),y);let z=p.useRef(void 0),R=s=>{P(),z.current=s,t.setThumbDragging(e,!0),V(window,"mouseup",k,!1),V(window,"touchend",k,!1),V(window,"pointerup",k,!1)},k=s=>{var j,K;((K=s.pointerId)!==null&&K!==void 0?K:(j=s.changedTouches)===null||j===void 0?void 0:j[0].identifier)===z.current&&(P(),t.setThumbDragging(e,!1),c(window,"mouseup",k,!1),c(window,"touchend",k,!1),c(window,"pointerup",k,!1))},E=t.getThumbPercent(e);(f||r==="rtl")&&(E=1-E);let I=v?{}:Q(N,q,{onMouseDown:s=>{s.button!==0||s.altKey||s.ctrlKey||s.metaKey||R()},onPointerDown:s=>{s.button!==0||s.altKey||s.ctrlKey||s.metaKey||R(s.pointerId)},onTouchStart:s=>{R(s.changedTouches[0].identifier)}});return Pe(y,t.defaultValues[e],s=>{t.setThumbValue(e,s)}),{inputProps:Q(G,D,{type:"range",tabIndex:v?void 0:0,min:t.getThumbMinValue(e),max:t.getThumbMaxValue(e),step:t.step,value:M,name:S,form:i,disabled:v,"aria-orientation":h,"aria-valuetext":t.getThumbValueLabel(e),"aria-required":u||void 0,"aria-invalid":o||d==="invalid"||void 0,"aria-errormessage":n["aria-errormessage"],"aria-describedby":[w["aria-describedby"],n["aria-describedby"]].filter(Boolean).join(" "),"aria-details":[w["aria-details"],n["aria-details"]].filter(Boolean).join(" "),onChange:s=>{t.setThumbValue(e,parseFloat(s.target.value))}}),thumbProps:{...I,style:{position:"absolute",[f?"top":"left"]:`${E*100}%`,transform:"translate(-50%, -50%)",touchAction:"none"}},labelProps:T,isDragging:t.isThumbDragging(e),isDisabled:v,isFocused:x}}var ze="zjmk6a0 onxwju6l onxwjupx onxwjuid onxwjuh5",Ce="zjmk6a1 onxwjuah onxwju5l onxwju2s",Ne="zjmk6a2 onxwju6l onxwjuoh onxwjuxx",Ue="zjmk6a3 onxwjual onxwju5l onxwju2s",_e="zjmk6a4 onxwju6l onxwjumt onxwjuih onxwjuh5",qe="zjmk6a5 onxwju8h onxwjuh5 onxwju6l",Ge="zjmk6a7 zjmk6a6 onxwjuc9 onxwjue9 onxwju8h onxwjuh5",He="zjmk6a9 zjmk6a8 onxwjud9 onxwjuct onxwjudp onxwjue5 onxwjug9 onxwjuep onxwjucd tq83zq0";const Oe=({state:n,trackRef:t,index:e,name:u})=>{const d=m.useRef(null),{thumbProps:o,inputProps:g,isDisabled:y,isDragging:h}=Le({index:e,trackRef:t,inputRef:d,name:u},n),{isFocusVisible:S,focusProps:i}=Ie();return m.createElement("div",{...o,className:He,...me({"focus-visible":S,dragging:h,disabled:y})},m.createElement(je,null,m.createElement("input",{...Q(g,i),ref:d})))},F=({formatOptions:n,label:t,step:e=5,testId:u,unitText:d,...o})=>{const g=m.useRef(null),y=Me(n),h=!!t&&typeof t=="string"&&t!=="",S=!h&&p.isValidElement(t),i=Re({...o,step:e,numberFormatter:y}),{groupProps:v,trackProps:f,labelProps:r,outputProps:V}=Fe({...o,label:t,step:e},i,g);return m.createElement(ge,{...v,className:ze,odComponent:"slider",testId:u},h&&m.createElement("label",{...r,className:Ce},t),S&&m.cloneElement(t,{...r}),m.createElement("div",{className:Ne},m.createElement("output",{...V,className:Ue},i.getThumbValueLabel(0),d)),m.createElement("div",{className:_e},m.createElement(se,{icon:Ee,size:"medium"}),m.createElement("div",{className:qe},m.createElement("div",{...f,ref:g,className:Ge,...me({disabled:o.isDisabled})},m.createElement(Oe,{index:0,state:i,trackRef:g,name:o.name}))),m.createElement(se,{icon:Se,size:"medium"})))};F.displayName="Slider";try{F.displayName="Slider",F.__docgenInfo={description:'A slider component that allows users to select a value from a range,\nsupports configurable step values and value unit post-fix. Use the `onChange` handler\nin most instances for retrieving the current value.\n\nSupports flexible label approach:\n- Pre-styled label `label="Distance"`\n- Custom label content: `label={<label className={customlabelStyles}>Distance</label>}`',displayName:"Slider",props:{label:{defaultValue:null,description:"Label for the slider. Can be a string or custom child element.",name:"label",required:!1,type:{name:"ReactNode"}},unitText:{defaultValue:null,description:"Unit text to display with the value (e.g., 'kms', 'miles', '%')",name:"unitText",required:!1,type:{name:"string"}},step:{defaultValue:{value:"5"},description:"Step value for slider increments",name:"step",required:!1,type:{name:"number"}},formatOptions:{defaultValue:null,description:"Formatting options for the value displayed in the slider",name:"formatOptions",required:!1,type:{name:"NumberFormatOptions"}},testId:{defaultValue:null,description:"The test ID will be rendered as a data attribute `data-testid` on the element for use with test assertions",name:"testId",required:!1,type:{name:"string"}}}}}catch{}const{expect:L,userEvent:X,within:Xe}=__STORYBOOK_MODULE_TEST__,dt={title:"Forms & Input Fields/Slider",tags:["beta"],component:F,parameters:{controls:{include:["label","minValue","maxValue","step","unitText","showValue","showStepButtons","isDisabled","orientation"]}},args:{label:void 0,step:5,minValue:5,maxValue:50,unitText:"",defaultValue:void 0,value:void 0,name:"demo-slider",id:void 0,onChange:void 0,isDisabled:!1,testId:"test-slider-component"}},Y={args:{label:"Distance",defaultValue:30,unitText:"kms"}},W={render:()=>m.createElement(ee,{space:"8"},m.createElement(F,{label:"Value with units",name:"demo-distance-slider",minValue:5,maxValue:50,defaultValue:30,unitText:"kms"}),m.createElement(F,{label:m.createElement("label",{className:ve({size:"4",weight:"semiBold"})},"Decimal (custom styled label)"),name:"demo-decimal-slider",minValue:1,maxValue:10,defaultValue:5.5,step:.5}),m.createElement("div",null,m.createElement(F,{label:"Percentage",name:"demo-percentage-slider",minValue:0,maxValue:100,defaultValue:25,unitText:"%",step:1})),m.createElement(F,{label:"Disabled",name:"demo-disabled-slider",minValue:5,maxValue:50,defaultValue:5,unitText:"kms",isDisabled:!0}))},J={render:()=>m.createElement(ee,{space:"8"},m.createElement(ee,{space:"3"},m.createElement(F,{label:"Distance from location",minValue:0,maxValue:50,defaultValue:15,unitText:"kms",step:5,"aria-describedby":"distance-description"}))),play:async({canvasElement:n,step:t})=>{const e=Xe(n),u=e.getAllByRole("slider",{name:/distance/i})[0];await t("Verify initial state",async()=>{await L(u).toBeInTheDocument(),await L(e.getAllByText("15kms")[0]).toBeInTheDocument(),await L(u).toHaveAttribute("type","range")}),await t("Focus slider and test keyboard accessibility",async()=>{await X.click(u),await L(u).toHaveFocus()}),await t("Test arrow key navigation (step increments)",async()=>{await X.keyboard("{ArrowRight}"),await L(e.getAllByText("20kms")[0]).toBeInTheDocument(),await X.keyboard("{ArrowLeft}"),await L(e.getAllByText("15kms")[0]).toBeInTheDocument()}),await t("Test boundary keys",async()=>{await X.keyboard("{Home}"),await L(e.getAllByText("0kms")[0]).toBeInTheDocument(),await X.keyboard("{End}"),await L(e.getAllByText("50kms")[0]).toBeInTheDocument()})}};Y.parameters={...Y.parameters,docs:{...Y.parameters?.docs,source:{originalSource:`{
  args: {
    label: 'Distance',
    defaultValue: 30,
    unitText: 'kms'
  }
}`,...Y.parameters?.docs?.source},description:{story:"The basic slider allows users to select a single value from a range",...Y.parameters?.docs?.description}}};W.parameters={...W.parameters,docs:{...W.parameters?.docs,source:{originalSource:`{
  render: () => <Stack space="8">
            <Slider label="Value with units" name="demo-distance-slider" minValue={5} maxValue={50} defaultValue={30} unitText="kms" />
            <Slider label={<label className={textStyles({
      size: '4',
      weight: 'semiBold'
    })}>
                        Decimal (custom styled label)
                    </label>} name="demo-decimal-slider" minValue={1} maxValue={10} defaultValue={5.5} step={0.5} />
            <div>
                <Slider label="Percentage" name="demo-percentage-slider" minValue={0} maxValue={100} defaultValue={25} unitText="%" step={1} />
            </div>
            <Slider label="Disabled" name="demo-disabled-slider" minValue={5} maxValue={50} defaultValue={5} unitText="kms" isDisabled />
        </Stack>
}`,...W.parameters?.docs?.source},description:{story:"Slider with various unit post-fix examples and disabled state",...W.parameters?.docs?.description}}};J.parameters={...J.parameters,docs:{...J.parameters?.docs,source:{originalSource:`{
  render: () => <Stack space="8">
            <Stack space="3">
                <Slider label="Distance from location" minValue={0} maxValue={50} defaultValue={15} unitText="kms" step={5} aria-describedby="distance-description" />
            </Stack>
        </Stack>,
  play: async ({
    canvasElement,
    step
  }) => {
    const canvas = within(canvasElement);
    const slider = canvas.getAllByRole('slider', {
      name: /distance/i
    })[0];
    await step('Verify initial state', async () => {
      await expect(slider).toBeInTheDocument();
      await expect(canvas.getAllByText('15kms')[0]).toBeInTheDocument();
      // Test that slider is accessible and focusable
      await expect(slider).toHaveAttribute('type', 'range');
    });
    await step('Focus slider and test keyboard accessibility', async () => {
      await userEvent.click(slider!);
      await expect(slider).toHaveFocus();
    });
    await step('Test arrow key navigation (step increments)', async () => {
      // Test right arrow - should increment by step (5)
      await userEvent.keyboard('{ArrowRight}');
      await expect(canvas.getAllByText('20kms')[0]).toBeInTheDocument();

      // Test left arrow - should decrement by step (5)
      await userEvent.keyboard('{ArrowLeft}');
      await expect(canvas.getAllByText('15kms')[0]).toBeInTheDocument();
    });
    await step('Test boundary keys', async () => {
      // Test Home key - should jump to minimum (0)
      await userEvent.keyboard('{Home}');
      await expect(canvas.getAllByText('0kms')[0]).toBeInTheDocument();

      // Test End key - should jump to maximum (50)
      await userEvent.keyboard('{End}');
      await expect(canvas.getAllByText('50kms')[0]).toBeInTheDocument();
    });
  }
}`,...J.parameters?.docs?.source},description:{story:"Keyboard and mouse interaction tests",...J.parameters?.docs?.description}}};const mt=["Standard","Variants","Interactions"];export{J as Interactions,Y as Standard,W as Variants,mt as __namedExportsOrder,dt as default};
