import{b as k,c as L,d as O,e as i,f as E,g as F,h as b,i as I}from"./useFocusRing-BxR5fZ-u.js";import{r as s,R as w}from"./index-sWIihdb-.js";function j(e={}){let{isReadOnly:a}=e,[t,r]=k(e.isSelected,e.defaultSelected||!1,e.onChange);function n(l){a||r(l)}function o(){a||r(!t)}return{isSelected:t,setSelected:n,toggle:o}}function K(e,a,t){let r=s.useRef(a),n=L(()=>{t&&t(r.current)});s.useEffect(()=>{var o;let l=e==null||(o=e.current)===null||o===void 0?void 0:o.form;return l==null||l.addEventListener("reset",n),()=>{l==null||l.removeEventListener("reset",n)}},[e,n])}function $(e){if(!e)return;let a=!0;return t=>{let r={...t,preventDefault(){t.preventDefault()},isDefaultPrevented(){return t.isDefaultPrevented()},stopPropagation(){console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.")},continuePropagation(){a=!1}};e(r),a&&t.stopPropagation()}}function _(e){return{keyboardProps:e.isDisabled?{}:{onKeyDown:$(e.onKeyDown),onKeyUp:$(e.onKeyUp)}}}let U=w.createContext(null);function A(e){let a=s.useContext(U)||{};F(a,e);let{ref:t,...r}=a;return r}function T(e,a){let{focusProps:t}=O(e),{keyboardProps:r}=_(e),n=i(t,r),o=A(a),l=e.isDisabled?{}:o,d=s.useRef(e.autoFocus);return s.useEffect(()=>{d.current&&a.current&&E(a.current),d.current=!1},[a]),{focusableProps:i({...n,tabIndex:e.excludeFromTabOrder&&!e.isDisabled?-1:void 0},l)}}function q(e,a,t){let{isDisabled:r=!1,isReadOnly:n=!1,value:o,name:l,children:d,"aria-label":v,"aria-labelledby":p,validationState:f="valid",isInvalid:u}=e,P=c=>{c.stopPropagation(),a.setSelected(c.target.checked)},x=d!=null,g=v!=null||p!=null;!x&&!g&&console.warn("If you do not provide children, you must specify an aria-label for accessibility");let{pressProps:y,isPressed:h}=b({isDisabled:r}),{pressProps:S,isPressed:D}=b({isDisabled:r||n,onPress(){a.toggle()}}),{focusableProps:m}=T(e,t),C=i(y,m),R=I(e,{labelable:!0});return K(t,a.isSelected,a.setSelected),{labelProps:i(S,{onClick:c=>c.preventDefault()}),inputProps:i(R,{"aria-invalid":u||f==="invalid"||void 0,"aria-errormessage":e["aria-errormessage"],"aria-controls":e["aria-controls"],"aria-readonly":n||void 0,onChange:P,disabled:r,...o==null?{}:{value:o},name:l,type:"checkbox",...C}),isSelected:a.isSelected,isPressed:h||D,isDisabled:r,isReadOnly:n,isInvalid:u||f==="invalid"}}export{q as $,j as a};
