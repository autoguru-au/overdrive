import{f as $e,w as ve,e as b,u as w}from"./index-BvIx1Icx.js";import{r as Ce,R as n}from"./index-UyvCXs0Z.js";import{m as xe}from"./index-BJSya_LC.js";import{d as ge}from"./dataAttrs-C4KudU4k.js";import"./Box-BZBbKvYV.js";import"./focusOutline.css.ts.vanilla-CAjzf48Q.js";import{c as B}from"./createRuntimeFn-62c9670f.esm-BkdTE7RR.js";import{e as k,b as ye,d as Ee,m as Pe,c as T,n as Be,k as we}from"./useFocusRing-ZvCRST-B.js";import{$ as De,a as Se}from"./useButton-DpQHAMyG.js";import{$ as Ve}from"./useFormReset-DscqYaxq.js";import{$ as Ie,c as Re,a as ke}from"./useField-76yXiEug.js";import{I as D}from"./Icon-DcPNnT7l.js";import{I as Te}from"./MagnifyIcon-Bn7ALZbo.js";import{I as Ae}from"./CloseIcon-mCneFRv1.js";import"./_commonjsHelpers-gnU0ypJ3.js";import"./index-ijGxv8TO.js";import"./index-rbvpFaDF.js";import"./context-B87F0bk8.js";function Ne(e,a){let{inputElementType:t="input",isDisabled:i=!1,isRequired:r=!1,isReadOnly:s=!1,type:u="text",validationBehavior:l="aria"}=e,[c,f]=k(e.value,e.defaultValue||"",e.onChange),{focusableProps:$}=ye(e,a),p=Ie({...e,value:c}),{isInvalid:d,validationErrors:h,validationDetails:v}=p.displayValidation,{labelProps:C,fieldProps:m,descriptionProps:o,errorMessageProps:x}=Re({...e,isInvalid:d,errorMessage:e.errorMessage||h}),me=Ee(e,{labelable:!0});const be={type:u,pattern:e.pattern};return Ve(a,c,f),ke(e,p,a),Ce.useEffect(()=>{if(a.current instanceof Pe(a.current).HTMLTextAreaElement){let g=a.current;Object.defineProperty(g,"defaultValue",{get:()=>g.value,set:()=>{},configurable:!0})}},[a]),{labelProps:C,inputProps:T(me,t==="input"?be:void 0,{disabled:i,readOnly:s,required:r&&l==="native","aria-required":r&&l==="aria"||void 0,"aria-invalid":d||void 0,"aria-errormessage":e["aria-errormessage"],"aria-activedescendant":e["aria-activedescendant"],"aria-autocomplete":e["aria-autocomplete"],"aria-haspopup":e["aria-haspopup"],"aria-controls":e["aria-controls"],value:c,onChange:g=>f(g.target.value),autoComplete:e.autoComplete,autoCapitalize:e.autoCapitalize,maxLength:e.maxLength,minLength:e.minLength,name:e.name,placeholder:e.placeholder,inputMode:e.inputMode,autoCorrect:e.autoCorrect,spellCheck:e.spellCheck,[parseInt(n.version,10)>=17?"enterKeyHint":"enterkeyhint"]:e.enterKeyHint,onCopy:e.onCopy,onCut:e.onCut,onPaste:e.onPaste,onCompositionEnd:e.onCompositionEnd,onCompositionStart:e.onCompositionStart,onCompositionUpdate:e.onCompositionUpdate,onSelect:e.onSelect,onBeforeInput:e.onBeforeInput,onInput:e.onInput,...$,...m}),descriptionProps:o,errorMessageProps:x,isInvalid:d,validationErrors:h,validationDetails:v}}var A={};A={"Clear search":"مسح البحث"};var N={};N={"Clear search":"Изчистване на търсене"};var _={};_={"Clear search":"Vymazat hledání"};var F={};F={"Clear search":"Ryd søgning"};var L={};L={"Clear search":"Suche zurücksetzen"};var z={};z={"Clear search":"Απαλοιφή αναζήτησης"};var O={};O={"Clear search":"Clear search"};var q={};q={"Clear search":"Borrar búsqueda"};var H={};H={"Clear search":"Tühjenda otsing"};var M={};M={"Clear search":"Tyhjennä haku"};var K={};K={"Clear search":"Effacer la recherche"};var W={};W={"Clear search":"נקה חיפוש"};var j={};j={"Clear search":"Obriši pretragu"};var U={};U={"Clear search":"Keresés törlése"};var G={};G={"Clear search":"Cancella ricerca"};var Z={};Z={"Clear search":"検索をクリア"};var J={};J={"Clear search":"검색 지우기"};var Q={};Q={"Clear search":"Išvalyti iešką"};var X={};X={"Clear search":"Notīrīt meklēšanu"};var Y={};Y={"Clear search":"Tøm søk"};var ee={};ee={"Clear search":"Zoekactie wissen"};var ae={};ae={"Clear search":"Wyczyść zawartość wyszukiwania"};var te={};te={"Clear search":"Limpar pesquisa"};var re={};re={"Clear search":"Limpar pesquisa"};var ne={};ne={"Clear search":"Ştergeţi căutarea"};var se={};se={"Clear search":"Очистить поиск"};var le={};le={"Clear search":"Vymazať vyhľadávanie"};var oe={};oe={"Clear search":"Počisti iskanje"};var ie={};ie={"Clear search":"Obriši pretragu"};var ue={};ue={"Clear search":"Rensa sökning"};var ce={};ce={"Clear search":"Aramayı temizle"};var de={};de={"Clear search":"Очистити пошук"};var fe={};fe={"Clear search":"清除搜索"};var pe={};pe={"Clear search":"清除搜尋條件"};var he={};he={"ar-AE":A,"bg-BG":N,"cs-CZ":_,"da-DK":F,"de-DE":L,"el-GR":z,"en-US":O,"es-ES":q,"et-EE":H,"fi-FI":M,"fr-FR":K,"he-IL":W,"hr-HR":j,"hu-HU":U,"it-IT":G,"ja-JP":Z,"ko-KR":J,"lt-LT":Q,"lv-LV":X,"nb-NO":Y,"nl-NL":ee,"pl-PL":ae,"pt-BR":te,"pt-PT":re,"ro-RO":ne,"ru-RU":se,"sk-SK":le,"sl-SI":oe,"sr-SP":ie,"sv-SE":ue,"tr-TR":ce,"uk-UA":de,"zh-CN":fe,"zh-TW":pe};function _e(e){return e&&e.__esModule?e.default:e}function Fe(e,a,t){let i=De(_e(he),"@react-aria/searchfield"),{isDisabled:r,isReadOnly:s,onSubmit:u,onClear:l,type:c="search"}=e,f=o=>{const x=o.key;x==="Enter"&&(r||s)&&o.preventDefault(),!(r||s)&&(x==="Enter"&&u&&(o.preventDefault(),u(a.value)),x==="Escape"&&(a.value===""&&(!t.current||t.current.value==="")?o.continuePropagation():(o.preventDefault(),a.setValue(""),l&&l())))},$=()=>{a.setValue(""),l&&l()},p=()=>{var o;(o=t.current)===null||o===void 0||o.focus()},{labelProps:d,inputProps:h,descriptionProps:v,errorMessageProps:C,...m}=Ne({...e,value:a.value,onChange:a.setValue,onKeyDown:s?e.onKeyDown:Be(f,e.onKeyDown),type:c},t);return{labelProps:d,inputProps:{...h,defaultValue:void 0},clearButtonProps:{"aria-label":i.format("Clear search"),excludeFromTabOrder:!0,preventFocusOnPress:!0,isDisabled:r||s,onPress:$,onPressStart:p},descriptionProps:v,errorMessageProps:C,...m}}function Le(e){let[a,t]=k(S(e.value),S(e.defaultValue)||"",e.onChange);return{value:a,setValue:t}}function S(e){if(e!=null)return e.toString()}var ze=B({defaultClassName:"_1p4n4812 tq83zq0",variantClassNames:{},defaultVariants:{},compoundVariants:[]}),Oe=B({defaultClassName:"_1p4n4813 _1p4n4810 _1p4n4811",variantClassNames:{},defaultVariants:{},compoundVariants:[]}),qe=B({defaultClassName:"_1p4n4815 _1p4n4814 onxwju6g onxwju58",variantClassNames:{},defaultVariants:{},compoundVariants:[]}),He="_1p4n4816";const Me={label:"Search"},Ke=e=>{const a=n.useRef(null),{buttonProps:t}=Se(e,a);return n.createElement("button",{...t,className:e.className,ref:a},e.children)},P=e=>{const{label:a,placeholder:t,ref:i}=e,r=a??(t==null?void 0:t.length)?t:Me.label,s={...e,"aria-label":r,placeholder:r},u=Le(s),l=n.useRef(null),c=n.useRef(null),{clearButtonProps:f,inputProps:$}=Fe(s,u,l),{focusProps:p,isFocused:d,isFocusVisible:h}=we(s),v=()=>{var m;(m=l.current)==null||m.focus()},C=()=>u.value===""?null:n.createElement(Ke,{className:qe({}),...f},n.createElement(D,{icon:Ae,size:"100%"}));return n.createElement("div",{className:ze({}),onClick:v,ref:c,...ge({disabled:s.isDisabled,focus:d,"focus-visible":h,"test-id":s.testId})},n.createElement("div",null,n.createElement(D,{icon:Te,size:"large"})),n.createElement("div",{className:He},n.createElement("input",{...T($,p),className:Oe({}),ref:xe([l,i])}),n.createElement(C,null)))};try{P.displayName="SearchBar",P.__docgenInfo={description:"Oversized search bar implemented via the react-aria `useSearchField` hook\n([docs](https://react-spectrum.adobe.com/react-aria/useSearchField.html)). This search bar is used primarily in\ncombination with the `OptionGrid` in order to filter displayed options and can be reset once text is entered.\n\nThis field does not have a visible label, so an placeholder text is used as `aria-label`.\nIt is recommended to use the `onChange` prop to handle the input content, uncontrolled.",displayName:"SearchBar",props:{onChange:{defaultValue:null,description:"Handler that is called when the value changes.",name:"onChange",required:!1,type:{name:"((value: string) => void)"}},isDisabled:{defaultValue:null,description:"Whether the input is disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},maxLength:{defaultValue:null,description:"The maximum number of characters supported by the input. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefmaxlength).",name:"maxLength",required:!1,type:{name:"number"}},placeholder:{defaultValue:null,description:"The placeholder text is also used as the aria-label since the SearchBar does not have a label element",name:"placeholder",required:!0,type:{name:"string"}},lang:{defaultValue:null,description:"Language content override",name:"lang",required:!1,type:{name:'Partial<Record<"label" | "clear", string>>'}},ref:{defaultValue:null,description:"Optional forwarded ref for the input element (React 19)",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},testId:{defaultValue:null,description:"The test ID will be rendered as a data attribute on the element for e2e testing purposes",name:"testId",required:!1,type:{name:"string"}}}}}catch{}const ua={title:"Forms & Input Fields/Search Bar",component:P,args:{placeholder:"Search for tasks",onChange:$e(),lang:{label:"Search for tasks",clear:"clear search"},maxLength:25,isDisabled:!1,testId:"demo-search-bar"},tags:["beta"]},E="Test search phrase",y={play:async({args:e,canvasElement:a,step:t})=>{const i=ve(a),r=i.getAllByRole("searchbox")[0];await t("Initial state",async()=>{await b(r).toHaveAccessibleName(e.placeholder??e.label)}),r.focus(),await t("Enter text into the search field",async()=>{await w.type(r,E),await b(e.onChange).toBeCalledWith(E),await b(r).toHaveValue(E),await b(r).toHaveFocus()}),await t("Clearing the search field",async()=>{await b(i.getAllByRole("button")[0]).toBeVisible(),await w.keyboard("{Esc}"),await b(r).toHaveValue("")}),r.blur()}};var V,I,R;y.parameters={...y.parameters,docs:{...(V=y.parameters)==null?void 0:V.docs,source:{originalSource:`{
  play: async ({
    args,
    canvasElement,
    step
  }) => {
    const canvas = within(canvasElement);
    const field = canvas.getAllByRole('searchbox')[0];
    await step('Initial state', async () => {
      await expect(field).toHaveAccessibleName(args.placeholder ?? args.label);
    });
    field.focus(); // react-aria seems to need this event to register interactions
    await step('Enter text into the search field', async () => {
      await userEvent.type(field, testPhrase);
      await expect(args.onChange).toBeCalledWith(testPhrase);
      await expect(field).toHaveValue(testPhrase);
      await expect(field).toHaveFocus();
    });
    await step('Clearing the search field', async () => {
      await expect(canvas.getAllByRole('button')[0]).toBeVisible();
      await userEvent.keyboard('{Esc}');
      await expect(field).toHaveValue('');
    });
    field.blur();
  }
}`,...(R=(I=y.parameters)==null?void 0:I.docs)==null?void 0:R.source}}};const ca=["TaskSearch"];export{y as TaskSearch,ca as __namedExportsOrder,ua as default};
