import{f as h,r as t,B as l}from"./iframe-CapgcpQw.js";import{T as p}from"./Text-BGIV1zEQ.js";import{u as b,a as E}from"./useNegativeMarginTop-BHu7NNnC.js";const V=["ul","ol"],u=({as:e="div",children:d,space:n="2",alignY:s="center",alignX:g,noWrap:c,dividers:r,width:m})=>{const f=b(n),y=E(n),a=h(d);if(a.length<2)return t.createElement(t.Fragment,null,a);const v=w(r);let o="div";return typeof e=="string"&&(o=V.includes(e)?"li":"div"),t.createElement(l,{as:e,width:m,position:"relative",display:"flex",alignItems:s,justifyContent:g,flexDirection:"row",flexWrap:c?"nowrap":"wrap",className:[y,!r&&f]},t.Children.map(a,(i,x)=>i!=null?t.createElement(l,{as:o,display:"flex",flexDirection:"row",flexWrap:"nowrap",alignItems:s,paddingTop:n,paddingLeft:r?void 0:n},i,r&&x!==a.length-1?t.createElement(l,{paddingX:n},v):null):null))},w=e=>typeof e=="boolean"?e?t.createElement(p,null,"â€¢"):null:t.isValidElement(e)?e:t.createElement(p,null,e);try{u.displayName="Inline",u.__docgenInfo={description:"",displayName:"Inline",props:{space:{defaultValue:{value:"2"},description:"",name:"space",required:!1,type:{name:'ResponsiveProp<"none" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9">'}},alignY:{defaultValue:{value:"center"},description:"",name:"alignY",required:!1,type:{name:'ConditionalStyleWithResponsiveArray<Values<{ baseline: "baseline"; center: string; centre: string; end: string; flexEnd: string; flexStart: string; start: string; stretch: string; }, { defaultClass: string; conditions: { mobile: string; tablet: string; desktop: string; largeDesktop: string; }; }>, ("mobile" | ... 2 ...'}},alignX:{defaultValue:null,description:"",name:"alignX",required:!1,type:{name:`ConditionalStyleWithResponsiveArray<Values<{ spaceAround: string; 'space-around': string; spaceBetween: string; 'space-between': string; 'space-evenly': string; center: string; centre: string; end: string; flexEnd: string; flexStart: string; start: string; stretch: string; }, { ...; }>, ("mobile" | ... 2 more ... | ...`}},noWrap:{defaultValue:null,description:"",name:"noWrap",required:!1,type:{name:"boolean"}},dividers:{defaultValue:null,description:"",name:"dividers",required:!1,type:{name:"ReactNode"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"ConditionalStyleWithResponsiveArray<Values<{ 'fit-content': \"fit-content\"; 'max-content': \"max-content\"; 'min-content': \"min-content\"; full: \"100%\"; auto: \"auto\"; '1': `var(--${string})`; '2': `var(--${string})`; '3': `var(--${string})`; '4': `var(--${string})`; '5': `var(--${string})`; '6': `var(--${string})`; '7':..."}},as:{defaultValue:{value:"div"},description:"Pass in the HTML element or JSX component that should be rendered for the box",name:"as",required:!1,type:{name:"ElementType"}}}}}catch{}export{u as I};
