import{x as v,e as i,v as r,y as h}from"./iframe-COJ7wZQX.js";import{s as x}from"./flex-Dvn_f9hH.js";const a=({as:e,children:s,align:o,center:l,end:p,gap:c="2",justify:d,reverse:g,start:m,...u})=>{const{Component:f,componentProps:y}=v({...u,as:e,odComponent:"flex-stack",...x({align:o,center:l,end:p,gap:c,justify:d,reverse:g,start:m})});return i.createElement(f,{...y},s)};a.displayName="FlexStack";try{a.displayName="FlexStack",a.__docgenInfo={description:"A vertical layout component that arranges children in a column with\nconsistent spacing without wrapping contint within additional components.\n\n- Supports responsive spacing and alignment\n- Can be reversed, centered, or justified\n\nThe `stack` function is available to apply the same flex layout option\nto any html element. Example use\n`<div className={stack({ gap: '3', center: true })} />`\n\n**Note**: Responsive props (`align`, `justify`) take precedence over\nshortcut props (`center`, `start`, etc.).",displayName:"FlexStack",props:{as:{defaultValue:null,description:"Name of HTML tag to render the component as",name:"as",required:!1,type:{name:"ElementType"}},align:{defaultValue:null,description:"Cross-axis horizontal alignment of items (_responsive_)",name:"align",required:!1,type:{name:'ConditionalStyleWithResponsiveArray<Values<{ baseline: "baseline"; center: string; centre: string; end: string; flexEnd: string; flexStart: string; start: string; stretch: string; }, { defaultClass: string; conditions: { mobile: string; tablet: string; desktop: string; largeDesktop: string; }; }>, ("mobile" | ... 2 ...'}},center:{defaultValue:null,description:"Shortcut center horizontal alignment",name:"center",required:!1,type:{name:"boolean"}},end:{defaultValue:null,description:"Shortcut end/right alignment",name:"end",required:!1,type:{name:"boolean"}},gap:{defaultValue:{value:"2"},description:"Item vertical spacing (_responsive_)",name:"gap",required:!1,type:{name:'ConditionalStyleWithResponsiveArray<Values<Record<"none" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9", { vars: { [x: string]: `var(--${string})`; }; gap: `var(--${string})`; }>, { defaultClass: string; conditions: { mobile: string; tablet: string; desktop: string; largeDesktop: string; }; }>, ("mobile" | .....'}},justify:{defaultValue:null,description:"Main-axis vertical alignment of items (_responsive_)",name:"justify",required:!1,type:{name:`ConditionalStyleWithResponsiveArray<Values<{ spaceAround: string; 'space-around': string; spaceBetween: string; 'space-between': string; 'space-evenly': string; center: string; centre: string; end: string; flexEnd: string; flexStart: string; start: string; stretch: string; }, { ...; }>, ("mobile" | ... 2 more ... | ...`}},reverse:{defaultValue:null,description:"Reverse item order",name:"reverse",required:!1,type:{name:"boolean"}},start:{defaultValue:null,description:"Shortcut start/left alignment",name:"start",required:!1,type:{name:"boolean"}}}}}catch{}const k={padding:"4",borderStyle:"solid",borderWidth:"1",borderColor:"hard",textAlign:"center"},S=(e=5)=>[...new Array(e).keys()].map(s=>i.createElement("div",{className:h(k),style:{minWidth:"100px"},key:s},s+1)),C={title:"Layout/Flex/Flex Stack",tags:["new","skip-themes"],component:a,args:{as:void 0,gap:"6",start:!1,center:!1,end:!1,reverse:!1,align:void 0,justify:void 0},argTypes:{as:{options:["div","span","ul","section","p"]},align:{options:r.alignItems},justify:{options:r.justifyContent},gap:{options:r.spaceWithNone}}},n={render:e=>i.createElement(a,{...e,"data-custom-attr":"flex-stack-story"},S())},t={...n,args:{align:["start","center","end"],gap:["2","4","6"]}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`{
  render: args => <FlexStack {...args} data-custom-attr="flex-stack-story">
            {items()}
        </FlexStack>
}`,...n.parameters?.docs?.source}}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:`{
  ...Standard,
  args: {
    align: ['start', 'center', 'end'],
    gap: ['2', '4', '6']
  }
}`,...t.parameters?.docs?.source},description:{story:"Responsive properties that change based on viewport size",...t.parameters?.docs?.description}}};const V=["Standard","Responsive"];export{t as Responsive,n as Standard,V as __namedExportsOrder,C as default};
