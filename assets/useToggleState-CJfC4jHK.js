import{a as f,b as C,c as n,d as O,e as R}from"./useFocusRing-BxatbQMb.js";import{$ as I}from"./useFormReset-D9LMpb7d.js";function _(e,a,s){let{isDisabled:i=!1,isReadOnly:d=!1,value:t,name:r,children:b,"aria-label":u,"aria-labelledby":$,validationState:c="valid",isInvalid:o}=e,p=l=>{l.stopPropagation(),a.setSelected(l.target.checked)},v=b!=null,P=u!=null||$!=null;!v&&!P&&console.warn("If you do not provide children, you must specify an aria-label for accessibility");let{pressProps:S,isPressed:g}=f({isDisabled:i}),{pressProps:y,isPressed:h}=f({onPress(){var l;a.toggle(),(l=s.current)===null||l===void 0||l.focus()},isDisabled:i||d}),{focusableProps:m}=C(e,s),x=n(S,m),D=O(e,{labelable:!0});return I(s,a.isSelected,a.setSelected),{labelProps:n(y,{onClick:l=>l.preventDefault()}),inputProps:n(D,{"aria-invalid":o||c==="invalid"||void 0,"aria-errormessage":e["aria-errormessage"],"aria-controls":e["aria-controls"],"aria-readonly":d||void 0,onChange:p,disabled:i,...t==null?{}:{value:t},name:r,type:"checkbox",...x}),isSelected:a.isSelected,isPressed:g||h,isDisabled:i,isReadOnly:d,isInvalid:o||c==="invalid"}}function w(e={}){let{isReadOnly:a}=e,[s,i]=R(e.isSelected,e.defaultSelected||!1,e.onChange);function d(r){a||i(r)}function t(){a||i(!s)}return{isSelected:s,setSelected:d,toggle:t}}export{_ as $,w as a};
