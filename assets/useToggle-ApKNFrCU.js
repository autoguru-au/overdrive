import{a as C,b as f,c as n,d as O}from"./useFocusRing-BWF9pPz_.js";import{$ as R,a as I}from"./useFocusable-BJ0kBWXc.js";function w(e={}){let{isReadOnly:a}=e,[i,l]=C(e.isSelected,e.defaultSelected||!1,e.onChange);function d(r){a||l(r)}function s(){a||l(!i)}return{isSelected:i,setSelected:d,toggle:s}}function A(e,a,i){let{isDisabled:l=!1,isReadOnly:d=!1,value:s,name:r,children:b,"aria-label":$,"aria-labelledby":u,validationState:c="valid",isInvalid:o}=e,p=t=>{t.stopPropagation(),a.setSelected(t.target.checked)},P=b!=null,S=$!=null||u!=null;!P&&!S&&console.warn("If you do not provide children, you must specify an aria-label for accessibility");let{pressProps:v,isPressed:g}=f({isDisabled:l}),{pressProps:y,isPressed:h}=f({isDisabled:l||d,onPress(){a.toggle()}}),{focusableProps:m}=R(e,i),x=n(v,m),D=O(e,{labelable:!0});return I(i,a.isSelected,a.setSelected),{labelProps:n(y,{onClick:t=>t.preventDefault()}),inputProps:n(D,{"aria-invalid":o||c==="invalid"||void 0,"aria-errormessage":e["aria-errormessage"],"aria-controls":e["aria-controls"],"aria-readonly":d||void 0,onChange:p,disabled:l,...s==null?{}:{value:s},name:r,type:"checkbox",...x}),isSelected:a.isSelected,isPressed:g||h,isDisabled:l,isReadOnly:d,isInvalid:o||c==="invalid"}}export{A as $,w as a};
