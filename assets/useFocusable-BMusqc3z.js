import{g as i,j as l,c as s,k as b,l as $}from"./useFocusRing-CjXZM1vs.js";import{r as d,R as p}from"./index-Cr_cdoBq.js";function m(e,t,r){let a=d.useRef(t),n=i(()=>{r&&r(a.current)});d.useEffect(()=>{var u;let o=e==null||(u=e.current)===null||u===void 0?void 0:u.form;return o==null||o.addEventListener("reset",n),()=>{o==null||o.removeEventListener("reset",n)}},[e,n])}function c(e){if(!e)return;let t=!0;return r=>{let a={...r,preventDefault(){r.preventDefault()},isDefaultPrevented(){return r.isDefaultPrevented()},stopPropagation(){t?console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior."):t=!0},continuePropagation(){t=!1},isPropagationStopped(){return t}};e(a),t&&r.stopPropagation()}}function v(e){return{keyboardProps:e.isDisabled?{}:{onKeyDown:c(e.onKeyDown),onKeyUp:c(e.onKeyUp)}}}let x=p.createContext(null);function P(e){let t=d.useContext(x)||{};$(t,e);let{ref:r,...a}=t;return a}function y(e,t){let{focusProps:r}=l(e),{keyboardProps:a}=v(e),n=s(r,a),u=P(t),o=e.isDisabled?{}:u,f=d.useRef(e.autoFocus);return d.useEffect(()=>{f.current&&t.current&&b(t.current),f.current=!1},[t]),{focusableProps:s({...n,tabIndex:e.excludeFromTabOrder&&!e.isDisabled?-1:void 0},o)}}export{y as $,m as a};
