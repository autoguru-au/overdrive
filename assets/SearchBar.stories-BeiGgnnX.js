import{f as be,w as $e,e as m,u as P}from"./index-QTf__Ygb.js";import{r as ve,R as n}from"./index-Cr_cdoBq.js";import{c as j,o as Ce}from"./createRuntimeFn-62c9670f.esm-DJGFTMd6.js";import{m as we}from"./index-R9txMNUR.js";import{d as ge}from"./dataAttrs-BPvLuXwN.js";import{e as R,d as ye,o as Ee,c as k,p as je,m as Pe}from"./useFocusRing-MzP6Zdtm.js";import{$ as Be,a as De}from"./useButton-Q3Pcv3H4.js";import{$ as Ie}from"./useFormReset-Z8LLruyj.js";import{$ as Se,c as Ve,a as Re}from"./useField-inyW4aCX.js";import{$ as ke}from"./useFocusable-DMWCN3gB.js";import{I as B}from"./Icon-u2F7oOeh.js";import{I as _e}from"./MagnifyIcon-C8SSV07c.js";import{I as Ae}from"./CloseIcon-CBJUgSLW.js";import"./_commonjsHelpers-C932wzq6.js";import"./Box-riOnoi3Y.js";import"./context-D5YQ5kXi.js";import"./useLabel-BMIfIpAe.js";function Te(e,a){let{inputElementType:r="input",isDisabled:u=!1,isRequired:t=!1,isReadOnly:s=!1,type:i="text",validationBehavior:o="aria"}=e,[c,f]=R(e.value,e.defaultValue||"",e.onChange),{focusableProps:b}=ke(e,a),p=Se({...e,value:c}),{isInvalid:d,validationErrors:h,validationDetails:$}=p.displayValidation,{labelProps:v,fieldProps:x,descriptionProps:l,errorMessageProps:C}=Ve({...e,isInvalid:d,errorMessage:e.errorMessage||h}),xe=ye(e,{labelable:!0});const me={type:i,pattern:e.pattern};return Ie(a,c,f),Re(e,p,a),ve.useEffect(()=>{if(a.current instanceof Ee(a.current).HTMLTextAreaElement){let w=a.current;Object.defineProperty(w,"defaultValue",{get:()=>w.value,set:()=>{},configurable:!0})}},[a]),{labelProps:v,inputProps:k(xe,r==="input"?me:void 0,{disabled:u,readOnly:s,required:t&&o==="native","aria-required":t&&o==="aria"||void 0,"aria-invalid":d||void 0,"aria-errormessage":e["aria-errormessage"],"aria-activedescendant":e["aria-activedescendant"],"aria-autocomplete":e["aria-autocomplete"],"aria-haspopup":e["aria-haspopup"],"aria-controls":e["aria-controls"],value:c,onChange:w=>f(w.target.value),autoComplete:e.autoComplete,autoCapitalize:e.autoCapitalize,maxLength:e.maxLength,minLength:e.minLength,name:e.name,placeholder:e.placeholder,inputMode:e.inputMode,autoCorrect:e.autoCorrect,spellCheck:e.spellCheck,onCopy:e.onCopy,onCut:e.onCut,onPaste:e.onPaste,onCompositionEnd:e.onCompositionEnd,onCompositionStart:e.onCompositionStart,onCompositionUpdate:e.onCompositionUpdate,onSelect:e.onSelect,onBeforeInput:e.onBeforeInput,onInput:e.onInput,...b,...x}),descriptionProps:l,errorMessageProps:C,isInvalid:d,validationErrors:h,validationDetails:$}}var _={};_={"Clear search":"مسح البحث"};var A={};A={"Clear search":"Изчистване на търсене"};var T={};T={"Clear search":"Vymazat hledání"};var F={};F={"Clear search":"Ryd søgning"};var N={};N={"Clear search":"Suche zurücksetzen"};var O={};O={"Clear search":"Απαλοιφή αναζήτησης"};var L={};L={"Clear search":"Clear search"};var z={};z={"Clear search":"Borrar búsqueda"};var M={};M={"Clear search":"Tühjenda otsing"};var q={};q={"Clear search":"Tyhjennä haku"};var H={};H={"Clear search":"Effacer la recherche"};var K={};K={"Clear search":"נקה חיפוש"};var U={};U={"Clear search":"Obriši pretragu"};var W={};W={"Clear search":"Keresés törlése"};var G={};G={"Clear search":"Cancella ricerca"};var Z={};Z={"Clear search":"検索をクリア"};var J={};J={"Clear search":"검색 지우기"};var Q={};Q={"Clear search":"Išvalyti iešką"};var X={};X={"Clear search":"Notīrīt meklēšanu"};var Y={};Y={"Clear search":"Tøm søk"};var ee={};ee={"Clear search":"Zoekactie wissen"};var ae={};ae={"Clear search":"Wyczyść zawartość wyszukiwania"};var re={};re={"Clear search":"Limpar pesquisa"};var te={};te={"Clear search":"Limpar pesquisa"};var ne={};ne={"Clear search":"Ştergeţi căutarea"};var se={};se={"Clear search":"Очистить поиск"};var oe={};oe={"Clear search":"Vymazať vyhľadávanie"};var le={};le={"Clear search":"Počisti iskanje"};var ue={};ue={"Clear search":"Obriši pretragu"};var ie={};ie={"Clear search":"Rensa sökning"};var ce={};ce={"Clear search":"Aramayı temizle"};var de={};de={"Clear search":"Очистити пошук"};var fe={};fe={"Clear search":"清除搜索"};var pe={};pe={"Clear search":"清除搜尋條件"};var he={};he={"ar-AE":_,"bg-BG":A,"cs-CZ":T,"da-DK":F,"de-DE":N,"el-GR":O,"en-US":L,"es-ES":z,"et-EE":M,"fi-FI":q,"fr-FR":H,"he-IL":K,"hr-HR":U,"hu-HU":W,"it-IT":G,"ja-JP":Z,"ko-KR":J,"lt-LT":Q,"lv-LV":X,"nb-NO":Y,"nl-NL":ee,"pl-PL":ae,"pt-BR":re,"pt-PT":te,"ro-RO":ne,"ru-RU":se,"sk-SK":oe,"sl-SI":le,"sr-SP":ue,"sv-SE":ie,"tr-TR":ce,"uk-UA":de,"zh-CN":fe,"zh-TW":pe};function Fe(e){return e&&e.__esModule?e.default:e}function Ne(e,a,r){let u=Be(Fe(he),"@react-aria/searchfield"),{isDisabled:t,isReadOnly:s,onSubmit:i,onClear:o,type:c="search"}=e,f=l=>{const C=l.key;C==="Enter"&&(t||s)&&l.preventDefault(),!(t||s)&&(C==="Enter"&&i&&(l.preventDefault(),i(a.value)),C==="Escape"&&(a.value===""&&(!r.current||r.current.value==="")?l.continuePropagation():(l.preventDefault(),a.setValue(""),o&&o())))},b=()=>{a.setValue(""),o&&o()},p=()=>{var l;(l=r.current)===null||l===void 0||l.focus()},{labelProps:d,inputProps:h,descriptionProps:$,errorMessageProps:v,...x}=Te({...e,value:a.value,onChange:a.setValue,onKeyDown:s?e.onKeyDown:je(f,e.onKeyDown),type:c},r);return{labelProps:d,inputProps:{...h,defaultValue:void 0},clearButtonProps:{"aria-label":u.format("Clear search"),excludeFromTabOrder:!0,preventFocusOnPress:!0,isDisabled:t||s,onPress:b,onPressStart:p},descriptionProps:$,errorMessageProps:v,...x}}function Oe(e){let[a,r]=R(D(e.value),D(e.defaultValue)||"",e.onChange);return{value:a,setValue:r}}function D(e){if(e!=null)return e.toString()}var Le=j({defaultClassName:"_1p4n4814 _1p4n4812 onxwju1r onxwju21 onxwjul8 onxwju1ds onxwju146 onxwju1dw onxwju3w onxwju3u onxwju48 onxwju4s onxwjucc onxwjugs onxwjus0 onxwjut8 onxwju23i onxwjuj0 onxwju240 onxwju24g onxwju24d onxwju24w onxwju25c onxwju25p onxwju1",variantClassNames:{disabled:{true:"_1p4n4815 _1p4n4813 onxwjus8 onxwju234"}},defaultVariants:{},compoundVariants:[]}),ze=j({defaultClassName:"_1p4n4817 _1p4n4816 onxwju1e0 onxwjuh8 onxwjunk onxwju2y onxwju24g onxwju3m onxwjup4 _1p4n4810 _1p4n4811",variantClassNames:{},defaultVariants:{},compoundVariants:[]}),Me=j({defaultClassName:"_1p4n4819 _1p4n4818 onxwju2h onxwju1n onxwju1x onxwju27 onxwjuoo onxwjung onxwjul8 onxwju1e0 onxwjuc4 onxwju22w onxwjuj0 onxwjulo onxwjumg",variantClassNames:{},defaultVariants:{},compoundVariants:[]});const qe={label:"Search",clear:"clear search"},He=e=>{const a=n.useRef(null),{buttonProps:r}=De(e,a);return n.createElement("button",{...r,className:e.className,ref:a},e.children)},E=e=>{const{label:a,placeholder:r,ref:u}=e,t=a??(r==null?void 0:r.length)?r:qe.label,s={...e,"aria-label":t,placeholder:t},i=Oe(s),o=n.useRef(null),c=n.useRef(null),{clearButtonProps:f,inputProps:b}=Ne(s,i,o),{focusProps:p,isFocused:d,isFocusVisible:h}=Pe(s),$=()=>{var x;(x=o.current)==null||x.focus()},v=()=>i.value===""?null:n.createElement(He,{className:Me({}),...f},n.createElement(B,{icon:Ae,size:"100%"}));return n.createElement("div",{className:Le({}),onClick:$,ref:c,...ge({focus:d,"focus-visible":h,"test-id":s.testId})},n.createElement("div",null,n.createElement(B,{icon:_e,size:"large"})),n.createElement("div",{className:Ce({display:"flex",flexGrow:1,alignItems:"center"})},n.createElement("input",{...k(b,p),className:ze({}),ref:we([o,u])}),n.createElement(v,null)))};try{E.displayName="SearchBar",E.__docgenInfo={description:"Oversized search bar implemented via the react-aria `useSearchField` hook\n([docs](https://react-spectrum.adobe.com/react-aria/useSearchField.html)). This search bar is used primarily in\ncombination with the `OptionGrid` in order to filter displayed options and can be reset once text is entered.\n\nThis field does not have a visible label, so an placeholder text is used as `aria-label`.\nIt is recommended to use the `onChange` prop to handle the input content, uncontrolled.",displayName:"SearchBar",props:{placeholder:{defaultValue:null,description:"The placeholder text is also used as the aria-label since the SearchBar does not have a label element",name:"placeholder",required:!0,type:{name:"string"}},onChange:{defaultValue:null,description:"The event handler for when the search field's value changes",name:"onChange",required:!1,type:{name:"((value: string) => void)"}},lang:{defaultValue:null,description:"Language content override",name:"lang",required:!1,type:{name:'Partial<Record<"label" | "clear", string>>'}},ref:{defaultValue:null,description:"Optional forwarded ref for the input element (React 19)",name:"ref",required:!1,type:{name:"Ref<HTMLInputElement>"}},testId:{defaultValue:null,description:"The test ID will be rendered as a data attribute on the element for e2e testing purposes",name:"testId",required:!1,type:{name:"string"}}}}}catch{}const ua={title:"Forms & Input Fields/Search Bar",component:E,args:{placeholder:"Search for tasks",onChange:be(),lang:{label:"Search for tasks",clear:"clear search"},maxLength:25,testId:"demo-search-bar"},tags:["beta"]},y="Test search phrase",g={play:async({args:e,canvasElement:a,step:r})=>{const u=$e(a),t=u.getAllByRole("searchbox")[0];await r("Initial state",async()=>{await m(t).toHaveAccessibleName(e.placeholder??e.label)}),t.focus(),await r("Enter text into the search field",async()=>{await P.type(t,y),await m(e.onChange).toBeCalledWith(y),await m(t).toHaveValue(y),await m(t).toHaveFocus()}),await r("Clearing the search field",async()=>{await m(u.getAllByRole("button")[0]).toBeVisible(),await P.keyboard("{Esc}"),await m(t).toHaveValue("")}),t.blur()}};var I,S,V;g.parameters={...g.parameters,docs:{...(I=g.parameters)==null?void 0:I.docs,source:{originalSource:`{
  play: async ({
    args,
    canvasElement,
    step
  }) => {
    const canvas = within(canvasElement);
    const field = canvas.getAllByRole('searchbox')[0];
    await step('Initial state', async () => {
      await expect(field).toHaveAccessibleName(args.placeholder ?? args.label);
    });
    field.focus(); // react-aria seems to need this event to register interactions
    await step('Enter text into the search field', async () => {
      await userEvent.type(field, testPhrase);
      await expect(args.onChange).toBeCalledWith(testPhrase);
      await expect(field).toHaveValue(testPhrase);
      await expect(field).toHaveFocus();
    });
    await step('Clearing the search field', async () => {
      await expect(canvas.getAllByRole('button')[0]).toBeVisible();
      await userEvent.keyboard('{Esc}');
      await expect(field).toHaveValue('');
    });
    field.blur();
  }
}`,...(V=(S=g.parameters)==null?void 0:S.docs)==null?void 0:V.source}}};const ia=["TaskSearch"];export{g as TaskSearch,ia as __namedExportsOrder,ua as default};
